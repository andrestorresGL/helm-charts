# required:
# Your application. Replace with your own details.
application:
  name: "nginx-example"
  labels: []
  replicas: 
  container:
    name: application
    image: "nginx"
    imagePullPolicy: IfNotPresent
    command: []
    args: []
    env: {}
    resources: {}
  secrets:
    - name: example-secret # helm will create this secret
      keys:
        password: extraspecial
      mount: /here
    - name: external-secret # a pre-existing secret
      external: true
      mount: /there
  configMaps: [] # same format as secrets
  service:
    enabled: true
    type: ClusterIP
    ports:
      - protocol: TCP
        port: 80
        targetPort: 80
        name: http
  ingress:
    enabled: false
    class: nginx
    annotations: {}
    httpRules:
      - host: example.com
        path: /
        servicePort: http
  storage: # storage volume shared between application and lotus node
    size: 1Gi
    mount: /shared

# Wallets are added to the wallet secret.
# if you don't want to specify wallets in values.yaml,
# you can add them later by editing the secret.
# wallets:
#   - address: f3xxxyyy
#     exported: aabbccdd
wallets: []

# lotus configuration
# By default, lotus will run as a full-node. In this mode, it will take
# time to sync the block chain and additiona resources will be needed
# to keep it in sync.
# Lotus can also be run as a lite-node. In this mode, wallets are local
# and lotus clients connect to the same lotus-lite node, but messages
# must be passed to a back-end lotus node. The backend can be a fullnode
# or gateway service you run yourself or a public endpoint
#
# note:
# api.chain.love is a lotus-gateway instance managed by Protocol Labs.
# It provides a limited set of lotus API endpoints.
lotus:
  image: coryschwartz/lotus:sidecar
  lite:
    enabled: false
    backend: wss://api.chain.love

# Do you want prometheus monitoring with prometheus-operator?
prometheus:
  serviceMonitor: false
  path: /metrics
  port: ""

# Bring your own filebeat.
# The network where you are running might already have great log hadling.
# If it does, there's no need to enable this. For those who need customized
# log handling, this is for you.
#
# Enabling filebeat will install a filebeat sidecar.
# Lotus will write logs to a file so it can be handled by filebeat. If your
# application writes log files as well, filebeat can pick them up.
#
# The example config works with logz.io.
# Configuration tips:
# hint: https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-reference-yml.html
filebeat:
  enabled: true
  image: store/elastic/filebeat:7.13.2
  path: /var/log/app
  config: |
    ######################## Filebeat Configuration ############################
    ############################################################################
    name: "a-lotus-dapp"
    tags:
      - filecoin
      - lotus
    fields:
      env: staging
      logzio_codec: json
      token: <token>
      cluster: <cluster>
      type: filebeat
    filebeat.inputs:
      - type: log
        enabled: true 
        paths:
          - /var/log/app/*.log
    output:
      logstash:
        hosts: listener.logz.io:5015
