---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-lotus-daemon
  labels:
    app: lotus-daemon
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  serviceName: {{ .Release.Name }}-lotus-daemon
  selector:
    matchLabels:
      app: lotus-daemon
      release: {{ .Release.Name }}
  volumeClaimTemplates:
    - metadata:
        name: lotus-path
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            {{- if .Values.lotus.lite.enabled }}
            storage: 200Gi
            {{- else }}
            storage: 4000Gi
            {{- end }}
    - metadata:
        name: parameter-cache
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  template:
    metadata:
      labels:
        app: lotus-daemon
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
    spec:
      securityContext:
        fsGroup: 532
      volumes:
        # The wallet, mounted by the wallet importer
        - name: wallets-secret-volume
          secret:
            secretName: {{ .Release.Name }}-wallets
            defaultMode: 0600
        - name: lotus-config-configmap-volume
          configMap:
            name: {{ .Release.Name }}-lotus-config
      containers:
        - name: lotus
          image: {{ .Values.lotus.image }}
          imagePullPolicy: {{ .Values.lotus.imagePullPolicy }}
          args:
            - daemon
            {{- if .Values.lotus.lite.enabled }}
            - "--lite"
            {{- end }}
          ports:
            - name: api
              containerPort: 1234
            - name: libp2p
              containerPort: 1235
          env:
            - name: FILECOIN_PARAMETER_CACHE
              value: /var/tmp/filecoin-proof-parameters
            - name: LOTUS_PATH
              value: /var/lib/lotus
            {{- if .Values.lotus.lite.enabled }}
            - name: FULLNODE_API_INFO
              value: {{ .Values.lotus.lite.backend }}
            - name: DOCKER_LOTUS_IMPORT_SNAPSHOT
              value: ""
            {{- else }}
            - name: DOCKER_LOTUS_IMPORT_SNAPSHOT
              value: https://fil-chain-snapshots-fallback.s3.amazonaws.com/mainnet/minimal_finality_stateroots_latest.car
            {{- end }}
            - name: GOLOG_FORMAT
              value: json
            {{- if .Values.lotus.jaeger }}
            - name: LOTUS_JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: LOTUS_JAEGER_AGENT_PORT
              value: "6831"
            {{- end }}
          startupProbe:
            tcpSocket:
              port: 1234
            failureThreshold: 60
            periodSeconds: 60
          readinessProbe:
            exec:
              command: [ "lotus", "sync", "wait" ]
          resources:
            {{- if .Values.lotus.lite.enabled }}
            requests:
              memory: 16Gi
              cpu: 8
            limits:
              memory: 32Gi
              cpu: 16
            {{- else }}
            requests:
              memory: 64Gi
              cpu: 8
            limits:
              memory: 96Gi
              cpu: 16
            {{- end }}
          volumeMounts:
            - name: lotus-path
              mountPath: /var/lib/lotus
            - name: parameter-cache
              mountPath: /var/tmp/filecoin-proof-parameters
          command: [ "bash", "-c" ]
          args:
            - |
              chmod -R o-r $LOTUS_PATH
              chmod -R o-w $LOTUS_PATH
              chmod -R g-r $LOTUS_PATH
              chmod -R g-w $LOTUS_PATH
              /docker-lotus-entrypoint.sh daemon

        # wallet importer
        # TODO: switch to a wallet server
        - name: wallet-importer
          image: {{ .Values.lotus.image }}
          imagePullPolicy: IfNotPresent
          command: [ "bash", "-c" ]
          args:
            - 'while sleep 60; do for key in /wallets/*; do lotus wallet import "${key}" || true; done; done'
          env:
            - name: LOTUS_PATH
              value: /var/lib/lotus
          volumeMounts:
            - name: wallets-secret-volume
              mountPath: /wallets
              readOnly: true
            - name: lotus-path
              mountPath: /var/lib/lotus
              readOnly: true
        # config watcher
        - name: config-watcher
          image: {{ .Values.lotus.image }}
          imagePullPolicy: IfNotPresent
          command: [ "bash", "-c" ]
          args:
            - |
              while sleep 60
              do
                diff $LOTUS_PATH/config.toml /config/config.toml
                if [ ! $? ]
                then
                  echo "difference detected. reloading lotus"
                  cp /config/config.toml $LOTUS_PATH/config.toml
                  lotus daemon stop
                fi
              done
          env:
            - name: LOTUS_PATH
              value: /var/lib/lotus
          volumeMounts:
            - name: lotus-config-configmap-volume
              mountPath: /config
              readOnly: true
            - name: lotus-path
              mountPath: /var/lib/lotus
              readOnly: true
